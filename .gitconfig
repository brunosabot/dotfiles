[user]
	name = [Username]
	email = [Email]

[color]
	diff = auto
	status = auto
	branch = auto
	ui = true

[color "branch"]
	current = green reverse
	local = green
	remote = yellow
	upstream = yellow

[color "diff"]
	meta = blue bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = green
	changed = yellow
	untracked = red
	branch = white reverse

[alias]
	s = status
	d = diff -b
	a = add
	r = rebase
	m = checkout master
	st = status
	ci = commit
	co = checkout
	cp = cherry-pick
	cpc = cherry-pick --continue
	fp = format-patch
	ld = log --left-right --cherry-pick --oneline
	lda = log --left-right --graph --cherry-pick --oneline
	lg = log --graph --pretty=tformat:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%an %cr)%Creset' --abbrev-commit --date=relative -n 20
	lgo = log --pretty=oneline -n 40
	lga = log --graph --pretty=tformat:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%an %cr)%Creset' --abbrev-commit --date=relative
	lgoa = log --pretty=oneline
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	bl = branch -l
	find = log -p --minimal -m -S
	oups = commit --amend -C HEAD
	oops = commit --amend -C HEAD
	pom = push origin master
	push = push --tags
	cdiff = diff --cached
	fdiff = diff --name-only
	rdiff  = "!f() { git diff "$1"^.."$1"; }; f"
	sdiff = diff --word-diff=color --word-diff-regex=.
	ign = ls-files -o -i --exclude-standard
	last = log -1 --stat
	cl = clone
	br = branch
	unstage = reset HEAD --
	dc = diff --cached
	aliases = config --get-regexp alias

[core]
	pager = less -x4
	excludesfile = ~/.gitignore
	filemode = false
	editor = vim
	trustctime = false
	autocrlf = true

[diff]
	mnemonicPrefix = true

[rerere]
	enabled = 1

[push]
	default = matching

[merge]
	tool = vimdiff

[mergetool]
	keeptemporaries = false
	keepbackups = false
	prompt = false
	trustexitcode = false

[filter "lfs"]
	required = true
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f

[pull]
	rebase = true
